<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Grant's Garden]]></title>
        <description><![CDATA[Work and writing in progress]]></description>
        <link>https://garden.grantcuster.com</link>
        <image>
            <url>https://grant-uploader.s3.amazonaws.com/og-images/index.png</url>
            <title>Grant&apos;s Garden</title>
            <link>https://garden.grantcuster.com</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Mon, 02 Sep 2024 01:18:30 GMT</lastBuildDate>
        <atom:link href="https://garden.grantcuster.com/rss.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 02 Sep 2024 01:18:30 GMT</pubDate>
        <managingEditor><![CDATA[Grant Custer]]></managingEditor>
        <item>
            <title><![CDATA[2024-09-01-21-16-36-Zoom]]></title>
            <description><![CDATA[# CSS Zoom

Redid CSS zoom method again. Hopefully a base to build on for future projects at https://github.com/GrantCuster/zoom

![Zooming in on the sloth](https://grant-uploader.s3.amazonaws.com/2024-09-01-21-15-17.gif)
]]></description>
            <link>https://garden.grantcuster.com/2024-09-01-21-16-36-Zoom</link>
            <guid isPermaLink="true">https://garden.grantcuster.com/2024-09-01-21-16-36-Zoom</guid>
            <pubDate>Sun, 01 Sep 2024 21:16:36 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[2024-09-01-11-06-33-Ted-Chiang-Why-AI-isnt-going-to-make-art]]></title>
            <description><![CDATA[# Ted Chiang: Why AI isn't going to make art

More response writing! Here we go. Same rules, don't summarize, pick out what's interesting to me even if it leaves a bunch of other stuff out.

First his definition:

> art is something that results from making a lot of choices.

In the case of prompting to generate text or images, he argues, you are making very few choices.

> What I'm saying is that art requires making choices at every scale; the countless small-scale choices made during implementation are just as iportant to the final product as the few large-scale choices made during the conception. [...] the interrelationship between the large scale and the small scale is where the artistry lies.

This is part of why I like making prototypes, going through the process of implementation, lots of small choices show up to be made, some of them suggest rippling, larger choices.

> I doubt you could replace every sentence in a thriller with one that is semantically equivalent and have the resulting novel be as entertaining.

This actually seems like a doable generative experiment...

Another big distinction, AI is not a language user because:

> Language [...] requires an intention to communicate.

Made clear by the example of ChatGPT being unable to _mean_ it when it says "I'm happy to see you".

Ending is stirring but not completely rigorous.

I like it best as meta-question of why do we create art why do we use language? There he puts the focus on intention.

That seems right to me but also limited, if we were looking for sincere intention in art, art would quickly get repetitive. We are looking for novelty too, or a response to what's came before that appears as novelty, or originality. Truthfulness is part of it, I wonder what the rest is?

]]></description>
            <link>https://garden.grantcuster.com/2024-09-01-11-06-33-Ted-Chiang-Why-AI-isnt-going-to-make-art</link>
            <guid isPermaLink="true">https://garden.grantcuster.com/2024-09-01-11-06-33-Ted-Chiang-Why-AI-isnt-going-to-make-art</guid>
            <pubDate>Sun, 01 Sep 2024 11:06:33 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[2024-08-31-21-48-26]]></title>
            <description><![CDATA[Source, output, data. More wyswig work.

![](https://grant-uploader.s3.amazonaws.com/2024-08-31-21-48-13-2000.jpg)
]]></description>
            <link>https://garden.grantcuster.com/2024-08-31-21-48-26</link>
            <guid isPermaLink="true">https://garden.grantcuster.com/2024-08-31-21-48-26</guid>
            <pubDate>Sat, 31 Aug 2024 21:48:26 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[2024-08-31-20-42-28-Future-of-Coding-Moving-Beyond-Syntax]]></title>
            <description><![CDATA[# Future of Coding: Moving Beyond Syntax

I'd like to get into the habit of using this blog to write down responses and appreciations of things. So let's do that:

I've been listening to the "Moving Beyond Syntax" episode from _Future of Coding_ over the past couple days. Overall I've just really been enjoying _Future of Coding_ episodes as a break from AI hype. As a reminder of all the interesting things there are still to do in programming as programming.

I also think the addition of Lu has been great. Now (and especially in this episode) there are three distinct points of view from Lu, Ivan and Jimmy, that bounce off and contrast with each other. I think sometimes I get stuck wanting to know / cover everything, and listening and enjoying the back-and-forth is a good reminder that it's good to be coming from a perspective. That you're part of a larger conversation and you don't have to cover every angle yourself. A good thing for me to write about is what angle I am coming from these days.

The episode was about AgentSheets, a programming language aimed at kids. I think things I enjoyed most in the episode were Jimmy pushing back against the limitations that some 'kid-friendly' languages impose. That his experience of programming was wanting to know what the computer was doing not have it abstracted away. Then again, I enjoyed Ivan pushing on the idea that that can be useful when doing 'computational thinking' about a topic, like how magnets work. In that genre of sort of explorable explanation, you may want to write code to see how a system operates, but you want to stay in the pocket of the system you're exploring, what the computer is doing is a distraction.

Both seem good points. Maybe it shows me that we should be more specific about learning to program. I would get excited about a kid exploring either of those paths, and can imagine both leading to programming. But it does seem like thinking about what the computer is doing is the pursuit of programming in a way the other might not be... not that there's any value attached either way. Probably ther person in pursuit of exploring something through computational thinking becomes a programmer partly out of frustration/necessity - interesting question if the tools were there and stable would they pursue programming, or pursue computational thinking around the things they're exploring... 

I also really enjoyed the discussion of embodiment. I've loved Papert's example of imagining yourself as gears or as the turtle. I don't think I really do that - though actually thinking about it always makes me think I should try more. Again, I loved the variety of experiences, and that you realize a variety of relationships to programming is good, especially in conversation with each other.
]]></description>
            <link>https://garden.grantcuster.com/2024-08-31-20-42-28-Future-of-Coding-Moving-Beyond-Syntax</link>
            <guid isPermaLink="true">https://garden.grantcuster.com/2024-08-31-20-42-28-Future-of-Coding-Moving-Beyond-Syntax</guid>
            <pubDate>Sat, 31 Aug 2024 20:42:28 GMT</pubDate>
        </item>
    </channel>
</rss>